h1. Now Some Scala

Now that we have a simple web app working lets add some scala.

h3. Create a servlet

Go to src/main/scala
Create TimeServlet.scala

<pre>
import java.util.Date
import javax.servlet.http.{HttpServletResponse, HttpServletRequest, HttpServlet}

class TimeServlet extends HttpServlet {
  override def doGet(request:HttpServletRequest, response:HttpServletResponse) = {
    response.setContentType("text/html")
    response.getWriter.write("Time: " + new Date)
  }
}
</pre>

h3. Add servlet to web.xml

<pre>
<servlet>
    <servlet-name>time</servlet-name>
    <servlet-class>TimeServlet</servlet-class>
</servlet>
<servlet-mapping>
    <servlet-name>time</servlet-name>
    <url-pattern>/time.html</url-pattern>
</servlet-mapping>
</pre>

At this point you need to restart the dev server.

<pre>
sbt>dev-appserver-stop dev-appserver-start
</pre>

h3. Test in browser

Go to http://localhost:8080/time.html

Run:

<pre>
sbt>~ prepare-web-app
</pre>

If you edit and save the time servlet file then refresh the browser you will see the changes are not picked up

h2. JRebel

To dynamically reload classes we need JRebel.

h3. Download and install

http://www.zeroturnaround.com/jrebel/current/

Zero Turnaround provides a free licence for scala development. JRebel is a great tool that does just what it says on the
tin. It saves you heaps of time.

Add location to sbt script
Eg.

<pre>
set JREBEL_JAR_PATH=C:\dev\tools\jrebel\jrebel-3.6\jrebel.jar

export JREBEL_JAR_PATH=$TOOLS_HOME/jrebel/jrebel-3.6/jrebel.jar
</pre>

Add JRebel trait to project scala

<pre>
class ScalaAppEngineProject(info: ProjectInfo) extends AppengineProject(info) with IdeaProject with JRebel
</pre>

Restart SBT and run:

<pre>
sbt>reload
sbt>dev-appserver-start
sbt>~ prepare-webapp
</pre>

'reload' re-compiles the project scala file.

If you edit and save the time servlet then refresh you browser then the changes should be immediately visible.

Next IntroducingTextile.


